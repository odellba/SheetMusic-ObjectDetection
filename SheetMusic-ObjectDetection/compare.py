from mido import MidiFile
#Compares the output MIDI file to the MIDI file generated by MuseScore
def compare():
    mid = MidiFile('output.mid', clip=True)
    noteArrayOutput=[]
    noteArrayTest=[]
    IndexsofWrong=[]
    IndexsofClose=[]
    Offby=[]
    RightCount=0
    OutputCount=0
    TestCount=0
    for msg in mid.tracks[1]:
        if not msg.is_meta:
            if msg.type == 'note_on' or msg.type == 'note_off':
                noteArrayOutput.append(msg.note)
                OutputCount=OutputCount+1
    mid2 = MidiFile('lost.mid', clip=True)
    for msg in mid2.tracks[0]:
        if not msg.is_meta:
            if msg.type == 'note_on' or msg.type == 'note_off':
                noteArrayTest.append(msg.note)
                TestCount=TestCount+1
        
    print(noteArrayOutput)
    print(noteArrayTest)
    for x in range(len(noteArrayOutput)):
        try:
            if noteArrayOutput[x]==noteArrayTest[x]:
                RightCount=RightCount+1
            else:
                """
                if abs(noteArrayOutput[x]-noteArrayTest[x])==1:
                    RightCount=RightCount+0.5
                    IndexsofClose.append(x)
                elif abs(noteArrayOutput[x]-noteArrayTest[x])==2:
                    RightCount=RightCount+0.2
                    IndexsofClose.append(x)
                else:"""
            IndexsofWrong.append(x)
            Offby.append(abs(noteArrayOutput[x]-noteArrayTest[x]))
        
        except IndexError:
            print("Exception caught for list index out of range")
            break

    return RightCount/TestCount,RightCount/OutputCount;    
    #print("Indexes of wrong note within 2")
    #print(IndexsofClose)
    #print("Indexes of wrong note>2")
    #print(IndexsofWrong)
    #print('Offby for wrong>2')
    #print(Offby)
    #print("output Notes Total:") 
    #print(OutputCount)
    #print("Test Notes Total:") 
    #print(TestCount)
    #print("Right Count:") 
    #print(RightCount)
    #print("Right/TotalTest")
    #print(RightCount/TestCount)
    #print("Right/TotalOutput")
    #print(RightCount/OutputCount)